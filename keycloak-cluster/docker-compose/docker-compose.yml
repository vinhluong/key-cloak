version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-Abcd1234a@}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-keycloakdb}
      MYSQL_USER: ${MYSQL_USER:-keycloak}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-Abcd1234a@}
    ports:
      - "3306:3306"
    volumes:
      - ../mysql_data:/var/lib/mysql
    networks:
      - keycloak-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-Abcd1234a@}"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak1:
    build:
      context: ../docker-images/keycloak
      args:
        GITHUB_REPO: ${KC_GITHUB_REPO:-https://github.com/your-username/keycloak.git}
        GITHUB_BRANCH: ${KC_GITHUB_BRANCH:-main}
    container_name: keycloak-node1
    restart: unless-stopped
    environment:
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE:-keycloakdb}
      KC_DB_USERNAME: ${MYSQL_USER:-keycloak}
      KC_DB_PASSWORD: ${MYSQL_PASSWORD:-Abcd1234a@}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_HOSTNAME_STRICT: "false"
      KC_PROXY: edge
      KC_HTTP_ENABLED: "true"
      KC_CACHE_STACK: kubernetes
      KC_CACHE_CONFIG_FILE: cache-ispn-jdbc-ping.xml
      KC_SPI_CONNECTIONS_JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
      JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
      JGROUPS_DISCOVERY_PROPERTIES: datasource_jndi_name=java:jboss/datasources/KeycloakDS,info_writer_sleep_time=500
      JGROUPS_TRANSPORT_STACK: tcp
      KC_HOSTNAME: keycloak1
      JGROUPS_DISCOVERY_EXTERNAL_IP: keycloak1
      KC_TRANSACTION_XA_ENABLED: "true"
    command: start --optimized --http-enabled=true --hostname-strict=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 15s
      timeout: 5s
      retries: 5
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - keycloak-network

  keycloak2:
    build:
      context: ../docker-images/keycloak
      args:
        GITHUB_REPO: ${KC_GITHUB_REPO:-https://github.com/your-username/keycloak.git}
        GITHUB_BRANCH: ${KC_GITHUB_BRANCH:-main}
    container_name: keycloak-node2
    restart: unless-stopped
    environment:
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE:-keycloakdb}
      KC_DB_USERNAME: ${MYSQL_USER:-keycloak}
      KC_DB_PASSWORD: ${MYSQL_PASSWORD:-Abcd1234a@}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_HOSTNAME_STRICT: "false"
      KC_PROXY: edge
      KC_HTTP_ENABLED: "true"
      KC_CACHE_STACK: kubernetes
      KC_CACHE_CONFIG_FILE: cache-ispn-jdbc-ping.xml
      KC_SPI_CONNECTIONS_JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
      JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
      JGROUPS_DISCOVERY_PROPERTIES: datasource_jndi_name=java:jboss/datasources/KeycloakDS,info_writer_sleep_time=500
      JGROUPS_TRANSPORT_STACK: tcp
      KC_HOSTNAME: keycloak2
      JGROUPS_DISCOVERY_EXTERNAL_IP: keycloak2
      KC_TRANSACTION_XA_ENABLED: "true"
    command: start --optimized --http-enabled=true --hostname-strict=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 15s
      timeout: 5s
      retries: 5
    depends_on:
      mysql:
        condition: service_healthy
      keycloak1:
        condition: service_healthy
    networks:
      - keycloak-network

  nginx:
    image: nginx:latest
    container_name: nginx-container
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../conf.d:/etc/nginx/conf.d
      - ../ssl:/etc/nginx/ssl
      - ../certbot:/var/www/certbot
    depends_on:
      - keycloak1
      - keycloak2
    networks:
      - keycloak-network

networks:
  keycloak-network:
    driver: bridge 